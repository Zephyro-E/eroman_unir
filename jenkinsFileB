pipeline {
    agent any

    stages {
        stage('Get Code') {
            steps {
                // Obtener el cÃ³digo del repo
                git 'https://github.com/Zephyro-E/eroman_unir.git'
            }
        }
        stage('Unit') {
            steps {
                catchError (buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    bat '''
                        set PYTHONPATH=%WORKSPACE%
                        pytest --junitxml=result-unit.xml test\\unit || exit 0
                    '''
                }
            }
        }
        stage('Rest') {
                        steps {
                            bat '''
                    set FLASK_APP=app\\api.py
                    start flask run
                    start java -jar C:\\Users\\Eduardo\\Desktop\\DevOps-UNIR\\programas\\wiremock-standalone-3.6.0.jar --port 9090 --root-dir test\\wiremock
                
                    set PYTHONPATH=%WORKSPACE%
                    pytest --junitxml=result-unit.xml test\\rest || exit 0
                    '''
            }
        }
        stage('Static') {
                        steps {
                            bat '''
                                flake8 --exit-zero --format=pylint app >flake8.out
                            '''
                            recordIssues tools: [flake8(name: 'flake8', pattern: 'flake8.out')], qualityGates: [[threshold:8, type: 'TOTAL', unstable: true], [threshold: 10, type: 'TOTAL', unstable: false]]
                        }
                    }
        stage('Security') {
                        steps {
                            bat '''
                               bandit --exit-zero -r . -f custom -o bandit.out --severity-level medium --msg-template "{abspath}:{line}: [{test_id}] {msg}"
                            '''
                            recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')], qualityGates: [[threshold:2, type: 'TOTAL', unstable: true], [threshold: 4, type: 'TOTAL', unstable: false]]
                        }
                    }
        stage('Performance') {
                        steps {
                            bat '''
                               C:\\Users\\Eduardo\\Desktop\\DevOps-UNIR\\programas\\apache-jmeter-5.6.3\\bin\\jmeter -n -t test\\jmeter\\flask.jmx -f -l flask.jtl
                            '''
                               perfReport sourceDataFiles: 'flask.jtl'
                        }
                    }
        stage('Cobertura') {
            steps {
                bat '''
                    coverage run --branch --source=app --omit=app\\__init__.py,app\\api.py -m pytest test\\unit
                    coverage xml
                '''
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    cobertura coberturaReportFile:'coverage.xml', conditionalCoverageTargets: '100,90,80', lineCoverageTargets: '100,85,95', onlyStable: false, failUnstable: false
                }
            }
        }
    }
}
